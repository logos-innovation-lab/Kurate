/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Polysum,
  PolysumInterface,
} from "../../../../@unirep/contracts/libraries/Polysum";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "R",
        type: "uint256",
      },
    ],
    name: "rForIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "xx",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type PolysumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolysumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Polysum__factory extends ContractFactory {
  constructor(...args: PolysumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Polysum> {
    return super.deploy(overrides || {}) as Promise<Polysum>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Polysum {
    return super.attach(address) as Polysum;
  }
  override connect(signer: Signer): Polysum__factory {
    return super.connect(signer) as Polysum__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolysumInterface {
    return new utils.Interface(_abi) as PolysumInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Polysum {
    return new Contract(address, _abi, signerOrProvider) as Polysum;
  }
}
