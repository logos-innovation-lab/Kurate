/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IUnirep,
  IUnirepInterface,
} from "../../../../@unirep/contracts/interfaces/IUnirep";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint160",
        name: "attester",
        type: "uint160",
      },
    ],
    name: "AttesterAlreadySignUp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "attesterId",
        type: "uint160",
      },
    ],
    name: "AttesterIdNotMatch",
    type: "error",
  },
  {
    inputs: [],
    name: "AttesterInvalid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "attester",
        type: "uint160",
      },
    ],
    name: "AttesterNotSignUp",
    type: "error",
  },
  {
    inputs: [],
    name: "DoubleSeal",
    type: "error",
  },
  {
    inputs: [],
    name: "EpochNotMatch",
    type: "error",
  },
  {
    inputs: [],
    name: "EpochNotSealed",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectHash",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "InvalidEpoch",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEpochKey",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epochTreeRoot",
        type: "uint256",
      },
    ],
    name: "InvalidEpochTreeRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidField",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateTreeRoot",
        type: "uint256",
      },
    ],
    name: "InvalidStateTreeRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxAttestations",
    type: "error",
  },
  {
    inputs: [],
    name: "NoAttestations",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nullilier",
        type: "uint256",
      },
    ],
    name: "NullifierAlreadyUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "OutOfRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "nullilier",
        type: "bytes32",
      },
    ],
    name: "ProofAlreadyUsed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
    ],
    name: "UserAlreadySignedUp",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "epochKey",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint160",
        name: "attesterId",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fieldIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "change",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Attestation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint160",
        name: "attesterId",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epochLength",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AttesterSignedUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint160",
        name: "attesterId",
        type: "uint160",
      },
    ],
    name: "EpochEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint160",
        name: "attesterId",
        type: "uint160",
      },
    ],
    name: "EpochSealed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint160",
        name: "attesterId",
        type: "uint160",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leaf",
        type: "uint256",
      },
    ],
    name: "EpochTreeLeaf",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint160",
        name: "attesterId",
        type: "uint160",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leaf",
        type: "uint256",
      },
    ],
    name: "StateTreeLeaf",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint160",
        name: "attesterId",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
    ],
    name: "UserSignedUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint160",
        name: "attesterId",
        type: "uint160",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hashedLeaf",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifier",
        type: "uint256",
      },
    ],
    name: "UserStateTransitioned",
    type: "event",
  },
] as const;

export class IUnirep__factory {
  static readonly abi = _abi;
  static createInterface(): IUnirepInterface {
    return new utils.Interface(_abi) as IUnirepInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUnirep {
    return new Contract(address, _abi, signerOrProvider) as IUnirep;
  }
}
