/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
	BaseContract,
	BigNumber,
	BigNumberish,
	BytesLike,
	CallOverrides,
	PopulatedTransaction,
	Signer,
	utils,
} from 'ethers'
import type { FunctionFragment, Result } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type {
	TypedEventFilter,
	TypedEvent,
	TypedListener,
	OnEvent,
	PromiseOrValue,
} from '../common'

export interface PoseidonT2Interface extends utils.Interface {
	functions: {
		'hash(uint256[1])': FunctionFragment
	}

	getFunction(nameOrSignatureOrTopic: 'hash'): FunctionFragment

	encodeFunctionData(functionFragment: 'hash', values: [[PromiseOrValue<BigNumberish>]]): string

	decodeFunctionResult(functionFragment: 'hash', data: BytesLike): Result

	events: {}
}

export interface PoseidonT2 extends BaseContract {
	connect(signerOrProvider: Signer | Provider | string): this
	attach(addressOrName: string): this
	deployed(): Promise<this>

	interface: PoseidonT2Interface

	queryFilter<TEvent extends TypedEvent>(
		event: TypedEventFilter<TEvent>,
		fromBlockOrBlockhash?: string | number | undefined,
		toBlock?: string | number | undefined,
	): Promise<Array<TEvent>>

	listeners<TEvent extends TypedEvent>(
		eventFilter?: TypedEventFilter<TEvent>,
	): Array<TypedListener<TEvent>>
	listeners(eventName?: string): Array<Listener>
	removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
	removeAllListeners(eventName?: string): this
	off: OnEvent<this>
	on: OnEvent<this>
	once: OnEvent<this>
	removeListener: OnEvent<this>

	functions: {
		hash(arg0: [PromiseOrValue<BigNumberish>], overrides?: CallOverrides): Promise<[BigNumber]>
	}

	hash(arg0: [PromiseOrValue<BigNumberish>], overrides?: CallOverrides): Promise<BigNumber>

	callStatic: {
		hash(arg0: [PromiseOrValue<BigNumberish>], overrides?: CallOverrides): Promise<BigNumber>
	}

	filters: {}

	estimateGas: {
		hash(arg0: [PromiseOrValue<BigNumberish>], overrides?: CallOverrides): Promise<BigNumber>
	}

	populateTransaction: {
		hash(
			arg0: [PromiseOrValue<BigNumberish>],
			overrides?: CallOverrides,
		): Promise<PopulatedTransaction>
	}
}
