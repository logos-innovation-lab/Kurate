/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, BigNumber, BigNumberish, Signer, utils } from 'ethers'
import type { EventFragment } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type {
	TypedEventFilter,
	TypedEvent,
	TypedListener,
	OnEvent,
	PromiseOrValue,
} from '../../../common'

export interface IUnirepInterface extends utils.Interface {
	functions: {}

	events: {
		'Attestation(uint256,uint256,uint160,uint256,uint256,uint256)': EventFragment
		'AttesterSignedUp(uint160,uint256,uint256)': EventFragment
		'EpochEnded(uint256,uint160)': EventFragment
		'EpochSealed(uint256,uint160)': EventFragment
		'EpochTreeLeaf(uint256,uint160,uint256,uint256)': EventFragment
		'StateTreeLeaf(uint256,uint160,uint256,uint256)': EventFragment
		'UserSignedUp(uint256,uint256,uint160,uint256)': EventFragment
		'UserStateTransitioned(uint256,uint160,uint256,uint256,uint256)': EventFragment
	}

	getEvent(nameOrSignatureOrTopic: 'Attestation'): EventFragment
	getEvent(nameOrSignatureOrTopic: 'AttesterSignedUp'): EventFragment
	getEvent(nameOrSignatureOrTopic: 'EpochEnded'): EventFragment
	getEvent(nameOrSignatureOrTopic: 'EpochSealed'): EventFragment
	getEvent(nameOrSignatureOrTopic: 'EpochTreeLeaf'): EventFragment
	getEvent(nameOrSignatureOrTopic: 'StateTreeLeaf'): EventFragment
	getEvent(nameOrSignatureOrTopic: 'UserSignedUp'): EventFragment
	getEvent(nameOrSignatureOrTopic: 'UserStateTransitioned'): EventFragment
}

export interface AttestationEventObject {
	epoch: BigNumber
	epochKey: BigNumber
	attesterId: BigNumber
	fieldIndex: BigNumber
	change: BigNumber
	timestamp: BigNumber
}
export type AttestationEvent = TypedEvent<
	[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber],
	AttestationEventObject
>

export type AttestationEventFilter = TypedEventFilter<AttestationEvent>

export interface AttesterSignedUpEventObject {
	attesterId: BigNumber
	epochLength: BigNumber
	timestamp: BigNumber
}
export type AttesterSignedUpEvent = TypedEvent<
	[BigNumber, BigNumber, BigNumber],
	AttesterSignedUpEventObject
>

export type AttesterSignedUpEventFilter = TypedEventFilter<AttesterSignedUpEvent>

export interface EpochEndedEventObject {
	epoch: BigNumber
	attesterId: BigNumber
}
export type EpochEndedEvent = TypedEvent<[BigNumber, BigNumber], EpochEndedEventObject>

export type EpochEndedEventFilter = TypedEventFilter<EpochEndedEvent>

export interface EpochSealedEventObject {
	epoch: BigNumber
	attesterId: BigNumber
}
export type EpochSealedEvent = TypedEvent<[BigNumber, BigNumber], EpochSealedEventObject>

export type EpochSealedEventFilter = TypedEventFilter<EpochSealedEvent>

export interface EpochTreeLeafEventObject {
	epoch: BigNumber
	attesterId: BigNumber
	index: BigNumber
	leaf: BigNumber
}
export type EpochTreeLeafEvent = TypedEvent<
	[BigNumber, BigNumber, BigNumber, BigNumber],
	EpochTreeLeafEventObject
>

export type EpochTreeLeafEventFilter = TypedEventFilter<EpochTreeLeafEvent>

export interface StateTreeLeafEventObject {
	epoch: BigNumber
	attesterId: BigNumber
	index: BigNumber
	leaf: BigNumber
}
export type StateTreeLeafEvent = TypedEvent<
	[BigNumber, BigNumber, BigNumber, BigNumber],
	StateTreeLeafEventObject
>

export type StateTreeLeafEventFilter = TypedEventFilter<StateTreeLeafEvent>

export interface UserSignedUpEventObject {
	epoch: BigNumber
	identityCommitment: BigNumber
	attesterId: BigNumber
	leafIndex: BigNumber
}
export type UserSignedUpEvent = TypedEvent<
	[BigNumber, BigNumber, BigNumber, BigNumber],
	UserSignedUpEventObject
>

export type UserSignedUpEventFilter = TypedEventFilter<UserSignedUpEvent>

export interface UserStateTransitionedEventObject {
	epoch: BigNumber
	attesterId: BigNumber
	leafIndex: BigNumber
	hashedLeaf: BigNumber
	nullifier: BigNumber
}
export type UserStateTransitionedEvent = TypedEvent<
	[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber],
	UserStateTransitionedEventObject
>

export type UserStateTransitionedEventFilter = TypedEventFilter<UserStateTransitionedEvent>

export interface IUnirep extends BaseContract {
	connect(signerOrProvider: Signer | Provider | string): this
	attach(addressOrName: string): this
	deployed(): Promise<this>

	interface: IUnirepInterface

	queryFilter<TEvent extends TypedEvent>(
		event: TypedEventFilter<TEvent>,
		fromBlockOrBlockhash?: string | number | undefined,
		toBlock?: string | number | undefined,
	): Promise<Array<TEvent>>

	listeners<TEvent extends TypedEvent>(
		eventFilter?: TypedEventFilter<TEvent>,
	): Array<TypedListener<TEvent>>
	listeners(eventName?: string): Array<Listener>
	removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
	removeAllListeners(eventName?: string): this
	off: OnEvent<this>
	on: OnEvent<this>
	once: OnEvent<this>
	removeListener: OnEvent<this>

	functions: {}

	callStatic: {}

	filters: {
		'Attestation(uint256,uint256,uint160,uint256,uint256,uint256)'(
			epoch?: PromiseOrValue<BigNumberish> | null,
			epochKey?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
			fieldIndex?: null,
			change?: null,
			timestamp?: null,
		): AttestationEventFilter
		Attestation(
			epoch?: PromiseOrValue<BigNumberish> | null,
			epochKey?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
			fieldIndex?: null,
			change?: null,
			timestamp?: null,
		): AttestationEventFilter

		'AttesterSignedUp(uint160,uint256,uint256)'(
			attesterId?: PromiseOrValue<BigNumberish> | null,
			epochLength?: null,
			timestamp?: null,
		): AttesterSignedUpEventFilter
		AttesterSignedUp(
			attesterId?: PromiseOrValue<BigNumberish> | null,
			epochLength?: null,
			timestamp?: null,
		): AttesterSignedUpEventFilter

		'EpochEnded(uint256,uint160)'(
			epoch?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
		): EpochEndedEventFilter
		EpochEnded(
			epoch?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
		): EpochEndedEventFilter

		'EpochSealed(uint256,uint160)'(
			epoch?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
		): EpochSealedEventFilter
		EpochSealed(
			epoch?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
		): EpochSealedEventFilter

		'EpochTreeLeaf(uint256,uint160,uint256,uint256)'(
			epoch?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
			index?: PromiseOrValue<BigNumberish> | null,
			leaf?: null,
		): EpochTreeLeafEventFilter
		EpochTreeLeaf(
			epoch?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
			index?: PromiseOrValue<BigNumberish> | null,
			leaf?: null,
		): EpochTreeLeafEventFilter

		'StateTreeLeaf(uint256,uint160,uint256,uint256)'(
			epoch?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
			index?: PromiseOrValue<BigNumberish> | null,
			leaf?: null,
		): StateTreeLeafEventFilter
		StateTreeLeaf(
			epoch?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
			index?: PromiseOrValue<BigNumberish> | null,
			leaf?: null,
		): StateTreeLeafEventFilter

		'UserSignedUp(uint256,uint256,uint160,uint256)'(
			epoch?: PromiseOrValue<BigNumberish> | null,
			identityCommitment?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
			leafIndex?: null,
		): UserSignedUpEventFilter
		UserSignedUp(
			epoch?: PromiseOrValue<BigNumberish> | null,
			identityCommitment?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
			leafIndex?: null,
		): UserSignedUpEventFilter

		'UserStateTransitioned(uint256,uint160,uint256,uint256,uint256)'(
			epoch?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
			leafIndex?: PromiseOrValue<BigNumberish> | null,
			hashedLeaf?: null,
			nullifier?: null,
		): UserStateTransitionedEventFilter
		UserStateTransitioned(
			epoch?: PromiseOrValue<BigNumberish> | null,
			attesterId?: PromiseOrValue<BigNumberish> | null,
			leafIndex?: PromiseOrValue<BigNumberish> | null,
			hashedLeaf?: null,
			nullifier?: null,
		): UserStateTransitionedEventFilter
	}

	estimateGas: {}

	populateTransaction: {}
}
